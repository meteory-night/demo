name: SpringBoot CI/CD with Maven

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  compile:
    runs-on: ubuntu-latest
    name: SpringBoot to Docker
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 13
        uses: actions/setup-java@v1
        with:
          java-version: 13
      - name: 缓存 Maven 依赖
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      # 编译打包
      - name: Build with Maven
        run: mvn package -Dmaven.test.skip=true
      # 登录到 Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}  # Docker 用户名
          password: ${{ secrets.DOCKER_PASSWORD }}  # Docker 密码
      - name: Set up Docker Buildx  # 设置 Docker Buildx（用于构建多平台镜像）
        id: buildx
        uses: docker/setup-buildx-action@v1
      # 构建并推送 Docker 镜像
      - name: Build and push Docker image
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./src/main/resources/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/demodemo:latest  # 镜像标签
      - name: Deploy to server  # 部署到服务器
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}  # 服务器 IP
          username: ${{ secrets.SERVER_USER }}  # 服务器用户名
          key: ${{ secrets.SSH_PRIVATE_KEY }}  # SSH 私钥
          script: |
            docker pull ${{ secrets.DOCKER_USERNAME }}/demodemo:latest  # 拉取最新的 Docker 镜像
            docker stop my-app || true  # 停止旧容器
            docker rm my-app || true  # 移除旧容器
            docker run -d --name my-app -p 30088:8088 ${{ secrets.DOCKER_USERNAME }}/demodemo:latest  # 运行新容器
